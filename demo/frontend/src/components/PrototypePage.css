@keyframes gradient-animation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Prevent dropdown menu from affecting scroll */
.MuiSelect-root {
  overflow: hidden; /* Prevent dropdown from affecting the layout */
}

/* Ensure the slider and dropdown are positioned correctly */
.slick-slider {
  overflow: hidden; /* Avoid content overflow */
}

.slick-slide {
  display: flex; /* Align items properly */
  align-items: flex-start; /* Align content to top */
  flex-direction: column; /* Ensure dropdowns align correctly */
}

/* Fix the buttons and dots positioning to avoid horizontal shifts */
.fixed-bottom {
  position: fixed;
  bottom: 2.5rem;
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-between;
  padding: 0 2rem;
  z-index: 10;
}

.slick-dots {
  position: fixed !important;
  bottom: 3rem !important;
  left: 50%;
  transform: translateX(-50%);
  display: flex !important;
  justify-content: center !important;
  z-index: 10;
  padding: 0; /* Ensure no additional padding affects layout */
}

.slick-dots li {
  display: inline-block;
  margin: 0 5px;
  list-style: none; /* Remove bullet points */
}

.slick-dots li button {
  border: none; /* Remove button border */
  background: transparent; /* Transparent background */
  padding: 0; /* Remove padding */
  cursor: default; /* Ensure no click interaction */
}

.slick-dots li button::before {
  opacity: 1; /* Ensure full opacity for visibility */
  font-size: 12px; /* Adjust dot size */
  transition: background-color 0.3s ease; /* Smooth transition for color */
}

.slick-dots li.slick-active button::before {
  color: cyan; /* Highlight color for the active dot */
}

.slick-dots li.completed button::before {
  color: lightblue; /* Color for completed steps */
}

.gradientButton {
  color: white;
  box-shadow: 0 0 10px rgba(0, 229, 255, 0.5), 0 0 20px rgba(240, 247, 0, 0.4); /* Glow effect */
  transition: all 0.3s ease;
  border: 1px solid rgba(0, 229, 255, 0.5); /* Border with cyan color */
  padding: 10px 18px;
  border-radius: 8px;
  font-family: 'MonoLisa';
  font-size: 1rem;
  background-color: transparent; /* Transparent by default */
}

.gradientButtonHovered {
  background: linear-gradient(
    270deg,
    #f0f700, /* Bright yellow */
    #00e6ff, /* Cyan blue */
    #00f7ff, /* Light blue */
    #0039e6, /* Dark blue */
    #0033ff, /* Bright blue */
    #001eff, /* Deep blue */
    #f0f700, /* Bright yellow */
    #00e6ff /* Cyan blue */
  );
  background-size: 200% 200%;
  animation: gradient-animation 20s ease infinite; /* Dynamic gradient only on hover */
}

.gradientButtonHovered:hover {
  box-shadow: 0 0 15px rgba(0, 229, 255, 0.8), 0 0 25px rgba(240, 247, 0, 0.6); /* Intensify glow on hover */
}

.manualButton {
  background-color: transparent;
  color: lightyellow;
  border: 1px solid lightyellow;
  transition: background-color 0.3s ease, color 0.3s ease;
  padding: 10px 18px;
  border-radius: 8px;
  font-family: 'MonoLisa';
  font-size: 1rem;
}

.manualButton:hover {
  background-color: lightyellow; /* Light yellow background on hover */
  color: black;
}

.magicRule {
  background-color: transparent; /* No background color */
  border: 2px solid rgba(0, 229, 255, 0.5); /* Cyan border with slight opacity */
  border-radius: 8px; /* Rounded corners */
  box-shadow: 0 0 10px rgba(0, 229, 255, 0.5),
    0 0 20px rgba(240, 247, 0, 0.4); /* Tech glow effect */
  color: lightyellow; /* White text color */
  outline: none; /* Remove default outline */
  transition: box-shadow 0.3s ease, padding-right 0.3s ease, padding-left 0.3s ease; /* Smooth transition for box shadow and padding */
  padding: 10px; /* Initial padding, adjust as needed */
  position: relative; /* Position relative for button inside */
  overflow: hidden; /* Prevent overflow issues */
  display: flex; /* Flex display to align items */
  align-items: center; /* Vertically center items */
  padding-left: 10px; /* Adjust padding-left for content alignment */
  height: 4rem; /* Maintain consistent height */
}

.magicRule:focus {
  box-shadow: 0 0 15px rgba(0, 229, 255, 0.8),
    0 0 25px rgba(240, 247, 0, 0.6); /* Intensify glow on focus */
}

.magicRule:hover {
  padding-left: 110px; /* Adjust padding-left to shift text for button space */
}

.gen-rule-button {
  position: absolute;
  left: 10px; /* Adjust the button's horizontal position */
  top: 50%; /* Vertically center the button within its container */
  transform: translateY(-50%); /* Align button in the middle vertically */
  z-index: 11; /* Ensure button is above the textarea */
  opacity: 0; /* Initially hidden */
  transition: left 0.3s ease, opacity 0.3s ease; /* Smooth transition for appearance */
  height: 32px; /* Adjust the button height to be smaller than textarea */
  line-height: 32px; /* Vertically center text within button */
  padding: 0 12px; /* Adjust padding for oval shape */
  border-radius: 16px; /* Make it oval-shaped */
  font-size: 0.85rem; /* Smaller font size for button */
  cursor: pointer; /* Show pointer cursor */
  font-family: 'MonoLisa'; /* Apply custom font */
  background: linear-gradient(
    270deg,
    #f0f700, /* Bright yellow */
    #00e6ff, /* Cyan blue */
    #00f7ff, /* Light blue */
    #0039e6, /* Dark blue */
    #0033ff, /* Bright blue */
    #001eff, /* Deep blue */
    #f0f700, /* Bright yellow */
    #00e6ff /* Cyan blue */
  );
  background-size: 200% 200%;
  animation: gradient-animation 20s ease infinite;
  color: lightyellow;
  pointer-events: auto; /* Ensure button is always clickable */
}

.magicRule:hover .gen-rule-button,
.magicRule:focus .gen-rule-button {
  left: 10px; /* Move inside from the left when hovering over textarea */
  opacity: 1; /* Make button visible */
  pointer-events: auto; /* Ensure button remains clickable */
}

.text-shifted {
  padding-left: 110px; /* Shift text slightly to the right when hovering */
}

.add-rule-container {
  height: 48px; /* Adjust the height to make it slightly larger */
}

button.flex-1 {
  height: 44px; /* Ensure buttons are slightly shorter than the container */
}

.manualRule {
  background-color: transparent; /* No background color */
  border: 1px solid lightyellow; /* Thinner white border */
  border-radius: 8px; /* Rounded corners */
  color: lightyellow; /* White text */
  outline: none; /* Remove default outline */
  transition: border 0.3s ease; /* Smooth transition for border */
  padding: 10px; /* Add padding for better text spacing */
}

/* Ensure inputs and selects have consistent styling */
.custom-input,
.custom-select .MuiOutlinedInput-root {
  height: 48px; /* Set a consistent height for inputs and selects */
  border: 1px solid lightyellow; /* Use thinner lightyellow border */
  border-radius: 4px; /* Add rounded corners */
  color: lightyellow; /* Text color for input values */
  background-color: transparent; /* Transparent background */
  outline: none; /* Remove default outline */
  padding: 0 12px; /* Add padding for better text spacing */
  font-family: 'MonoLisa'; /* Apply custom font */
  font-size: 1rem; /* Set font size */
  width: 100%; /* Ensure full width for consistency */
  box-sizing: border-box; /* Include padding and border in element's total width and height */
}

.custom-input::placeholder {
  color: lightyellow; /* Placeholder color */
  opacity: 0.8; /* Slightly transparent for the placeholder */
}

.custom-input:focus,
.custom-select .MuiOutlinedInput-root.Mui-focused {
  border-color: #FFD700; /* Change border color on focus */
}

.custom-select .MuiSelect-select {
  padding: 12px; /* Ensure consistent padding */
  color: lightyellow; /* Text color for select values */
}

.custom-select .MuiSelect-icon {
  color: lightyellow; /* Icon color */
}

.custom-select .MuiOutlinedInput-notchedOutline {
  border-color: lightyellow !important; /* Lightyellow border for select */
}

.custom-select:hover .MuiOutlinedInput-notchedOutline,
.custom-input:hover {
  border-color: #FFD700; /* Hover effect border color */
}

.input-group {
  display: flex; /* Use flexbox to align inputs */
  align-items: center; /* Center vertically */
  width: 100%; /* Ensure the input group takes full width */
}

.input-group input {
  flex: 1; /* Ensure input fields share the available space equally */
  min-width: 0; /* Prevent input from overflowing parent container */
}

.input-group .at-symbol {
  padding: 0 8px; /* Padding around @ symbol */
  color: lightyellow; /* Color for @ symbol */
  border: 1px solid lightyellow; /* Match border with inputs */
  height: 48px; /* Match height with inputs */
  display: flex; /* Flexbox for centering content */
  align-items: center; /* Center content vertically */
  background-color: transparent; /* Transparent background */
  box-sizing: border-box; /* Include padding and border in element's total width and height */
  flex-shrink: 0; /* Prevent shrinking */
}

/* Password input with eye icon */
.password-input {
  position: relative; /* Relative positioning for eye icon */
}

.password-input input {
  padding-right: 40px; /* Add space for the eye icon */
}

.password-input .eye-icon {
  position: absolute; /* Position absolutely inside the input */
  right: 10px; /* Align icon to the right */
  top: 50%; /* Center icon vertically */
  transform: translateY(-50%); /* Adjust for vertical centering */
  cursor: pointer; /* Pointer cursor for interactivity */
  color: lightyellow; /* Match color */
  width: 24px; /* Size the icon */
  height: 24px; /* Size the icon */
}
  
@keyframes grow-line {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}
